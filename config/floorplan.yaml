      name: Floorplan
      image: /local/custom_ui/floorplan/floorplan.svg
      stylesheet: /local/custom_ui/floorplan/floorplan.css
      
      # These options are optional
      # warnings:                  # enable warnings (to find out why things might ot be working correctly)
      # pan_zoom:                  # enable experimental panning / zooming
      # hide_app_toolbar:          # hide the application toolbar (when used as a custom panel)
      date_format: DD-MMM-YYYY   # Date format to use in hover-over text
      
      # last_motion_entity: sensor.template_last_motion
      # last_motion_class: last-motion

      groups:

        - name: Sensors
          entities:
             -  sensor.dark_sky_apparent_temperature
          text_template: '${entity.state ? entity.state : "unknown"}'
          # An example of rounding up a number, i.e. a temperature of 90.1 becomes 91
          # text_template: '${entity.state ? Math.ceil(entity.state) : "undefined"}'  
          # class_template: '
          #   var temp = parseFloat(entity.state.replace("Â°", ""));
          #   if (temp < 10)
          #     return "temp-low";
          #   else if (temp < 30)
          #     return "temp-medium";
          #   else
          #     return "temp-high";
          #   '

        - name: Indv Lights
          entities:
             - light.livingroom_light
             - light.prep_light
             - light.kitchen_light
             - light.office_light
             - light.monitor_light
             - light.server_light
             - light.bedroom_light
             - light.bathroom_light
             - light.closet_light
             - light.desk_light
             - light.hyperion
          states:
            - state: 'on'
              class: 'light-on-indv'
            - state: 'off'
              class: 'light-off-indv'
          action:
            domain: light   # This optional parameter allows you to use other services such as homeassistant.toggle like here.
            service: toggle

        - name: Group Lights
          entities:
             - group.kitchen_lights
             - group.livingroom_lights
             - group.office_lights
             - group.bedroom_lights
             - group.closet_lights
             - group.bathroom_lights
          states:
            - state: 'on'
              class: 'light-on-group'
            - state: 'off'
              class: 'light-off-group'
          action:
            domain: light   # This optional parameter allows you to use other services such as homeassistant.toggle like here.
            service: toggle

        # - name: Switches
        #   entities:
        #      - switch.doorbell
        #   states:
        #     - state: 'on'
        #       class: 'doorbell-on'
        #     - state: 'off'
        #       class: 'doorbell-off'

        # - name: NVR
        #   entities:
        #      - binary_sensor.blue_iris_nvr
        #   text_template: '${(entity.state === "on") ? "online" : "offline"}'
        #   states:
        #     - state: 'off'
        #       class: 'danger-text'
        #     - state: 'on'
        #       class: 'success-text'

        # - name: Alarm Panel
        #   entities:
        #      - alarm_control_panel.alarm
        #   states:
        #     - state: 'armed_away'
        #       class: 'alarm-armed'
        #     - state: 'armed_home'
        #       class: 'alarm-armed'
        #     - state: 'disarmed'
        #       class: 'alarm-disarmed'

        - name: Binary sensors
          entities:
            - binary_sensor.n_8266_1_motion
            - binary_sensor.n_8266_2_motion
            - binary_sensor.n_8266_3_motion
            - binary_sensor.n_8266_4_motion
            - binary_sensor.n_8266_5_motion
            - binary_sensor.n_8266_6_motion
            - binary_sensor.n_8266_7_motion
            - binary_sensor.n_8266_8_motion
          states:
            - state: 'off'
              class: 'info-background'
            - state: 'on'
              class: 'danger-background'
          state_transitions:
            - name: On to off
              from_state: 'on'
              to_state: 'off'
              duration: 10

        - name: Climate Sensors
          entities:
            - sensor.h_8266_1_humidity
            - sensor.h_8266_1_temp
            - sensor.h_8266_2_humidity
            - sensor.h_8266_2_temp
            - sensor.n_8266_6_humidity
            - sensor.n_8266_6_temp
            - sensor.n_8266_4_humidity
            - sensor.n_8266_4_temp


        - name: Media Players
          entities:
            - media_player.living_room_tv
            - media_player.living_room_speaker
            - media_player.office_speaker
            - media_player.minispeaker
            - media_player.rasplex
          states:
            - state: 'off'
              class: 'squeezebox-off'
            - state: 'idle'
              class: 'squeezebox-off'
            - state: 'paused'
              class: 'squeezebox-off'
            - state: 'playing'
              class: 'squeezebox-on'

        # - name: Cameras
        #   entities:
        #     - camera.hallway
        #     - camera.driveway
        #     - camera.front_door
        #     - camera.backyard
        #   states:
        #     - state: 'idle'
        #       class: 'camera-idle'
              
#        - name: thermostat_temp
#          entities:
#            - climate.downstairs
#            - climate.upstairs
#          text_template: '${entity.attributes.current_temperature ? entity.attributes.current_temperature : "undefined"}'
#
# The above text_template uses extended attributes from the climate.* objects to get current temperature.

#        - name: text_states
#          entities:
#            - sensor.downstairs_thermostat_humidity
#            - sensor.dark_sky_temperature
#            - sensor.last_message
#          text_template: '${entity.state ? entity.state.replace(/\s{2,}/g,"") : "undefined"}'
#
# The above text_template uses jQuery syntax to search and replace any instance of 2 consecutive (or more) spaces in a string of text.
